find.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
install.packages("slidify")
library("devtools")
install_github('ramnathv/slidify', ref = 'dev')
is.installed(slidify)
install.packages("ggplot2")
library(slidify)
library(ggplot2)
exit
close
add2 <- function(x,y) {
x+y
}
add(3,5)
add2(3,5)
above <- function(x,n) {
use <- x>n
x[use]
}
x <- 1:20
above(x,12)
above <- function(x, n = 10) {
use <- x>n
x[use]
}
above(x)
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[, i])
}
means
}
add2 <- function(x,y) {
x+y
}
above10 <- function(x){
use <- x > 10
x[use]
}
above <- function(x, n = 10) {
use <- x>n
x[use]
}
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[, i], na.rm = removeNA)
}
means
}
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
library(datasets)
data("iris")
?iris
apply(iris, 2, mean)
iris$Species
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 1, mean)
library(datasets)
data("mtcars")
?mtcars
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$mpg, mtcars$cyl, mean)
apply(mtcars, 2, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
209.21429-82.63636
debug(ls)
pwd
getwd()
i
library<"swirl">
library("swirl")
swirl()
exit
library("swirl")
swirl()
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
c(x[3], x[5], x[7])
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect1, vect2)
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patients", "age", "weight", "bp", "rating", "test")
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
| 9.3 || FALSE
6 != 10 && FALSE && 1 >= 2` or `TRUE || 5 <| 9.3 || FALSE
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5==6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(x>7)
which(ints>7)
any(ints < 0)
all(ints > 0)
exit
library("swirl")
swirl()
exit
library("swirl")
swirl()
Sys.Date()
mean(c(2, 4, 5))
submit()
boring_function("My first function!")
boring_function
submit()
my_mean(c(4, 5, 10))
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, nnum = 5)
remainder(divisor = 11, num = 5)
remainder(4, divisor = 2)
args(remainder)
submit()
evaluate(c(1.4, 3.6, 7.9, 8.8))
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x+1}, c(8, 4, 0))
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){x[length(x)]}, c(8, 4, 0))
?paste
paste0("Programming", "is", "fun!")
paste("Programming", "is", "fun!")
submit()
submit()
submit()
telegram("COMSOL")
submit()
submit()
madlibs(place = "Chicago", adjective = "cold", noun = "food")
mad_libs(place = "Chicago", adjective = "cold", noun = "food")
submit()
'I' %p% 'love' %p% 'R!'
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(data)
str(plants)
swirl()
library("swirl")
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply
lapply(unique_vals, function(elem) elem[2])
swirl()
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, sum)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
?par
library(swirl)
install_from_swirl("Exploratory Data Analysis")
getwd()
setwd("C:/Users/Mao/Desktop/coursera/exploratory_data_analysis/ExData_Plotting1/")
ls()
hwdata <- read.table("../household_power_consumption.txt", header = TRUE, na.strings = '?', quote = "")
head(hwdata)
colnames(hwdata)
class(hwdata)
nrow(hwdata)
ncol(hwdata)
hwdata <- read.table("../household_power_consumption.txt", header = TRUE, na.strings = '?', quote = "", sep = ';')
colnames(hwdata)
ncol(hwdata)
nrow(hwdata)
class(hwdata)
?strptime
head(hwdata)
hwdata$Date <- as.Date(hwdata$Date)
head(hwdata)
hwdata <- read.table("../household_power_consumption.txt", header = TRUE, na.strings = '?', quote = "", sep = ';')
?as.Date
head(hwdata)
hwdata$Date <- as.Date(hwdata$Date, "%d/%m/%y")
head(hwdata)
hwdata <- read.table("../household_power_consumption.txt", header = TRUE, na.strings = '?', quote = "", sep = ';')
hwdata1 <- hwdata
head(hwdata1)
class(hwdata1$Date)
class(hwdata1$Date[1])
as.character(hwdata1$Date)
class(hwdata1$Date)
x <- c(hwdata1$Date[1], hwdata1$Time)
x
x <- c(hwdata1$Date[1], hwdata1$Time[1])
x
hwdata1$Date[1]
as.character(hwdata1$Date[1])
x <- as.character(hwdata1$Date[1])
as.Date(x, "%d/%m/%y")
x
as.Date(x, "%m/%d/%y")
as.Date(x, "%D/%M/%Y")
as.Date(x, "%d/%M/%Y")
as.Date(x, "%d/%m/%Y")
as.Date(x, "%d/%m/%y")
as.Date(x, "%d/%m/%Y")
hwdata1$Date <- as.character(hwdata1$Date)
head(hwdata1)
class(hwdata1$Date)
hwdata1$Date <- as.Date(hwdata1$Date, "%d/%m/%Y")
head(hwdata1)
class(hwdata1$Time)
hwdata1$Time <- as.character(hwdata1$Time)
?strptime
head(hwdata)
source("ExData_Plotting1.R")
ExData_Plotting1()
head(hwdata)
class(hwdata$Date)
hwdata <- read.table("../household_power_consumption.txt", header = TRUE, na.strings = '?', quote = "", sep = ';')
dates <- as.character(hwdata$Date)
times <- as.character(hwdata$Time)
fulltimes <- paste(dates, times)
hwdata$Date <- as.Date(dates, "%d/%m/%Y")
head(hwdata)
hwdata$Time <- strptime(fulltimes, "%d/%m/%Y %H:%M:%S")
head(hwdata)
head(hwdata)
hwdata[[hwdata$Date<=as.Date("2007-02-02")]]
hwdata[hwdata$Date<=as.Date("2007-02-02")]
date1 <- as.Date("2007-02-01")
date2 <- as.Date("2007-02-02")
data2plot <- hwdata[hwdata$Date >= date1 & hwdata$Date <= date2, ]
head(data2plot)
?par
hist(data2plot$Global_active_power)
hist(data2plot$Global_active_power, col = 'red', xxlab = "Global Active Power (kilowatts)")
hist(data2plot$Global_active_power, col = 'red', xlab = "Global Active Power (kilowatts)")
hist(data2plot$Global_active_power, col = 'red', xlab = "Global Active Power (kilowatts)")
title("Global Active Power")
title(main = "Global Active Power")
hist(data2plot$Global_active_power, col = 'red', xlab = "Global Active Power (kilowatts)", main = "Global Active Power")
png("plot1.png", width = 480, height = 480)
with(data2plot, hist(Global_active_power, col = 'red', xlab = "Global Active Power(kilowatts)", main = "Global Active Power"))
dev.off()
hist(data2plot$Global_active_power)
title(main = "Something else")
source(ExData_Plotting1
)
source(ExData_Plotting1)
source("ExData_Plotting1.R")
ExData_Plotting1()
head(hwdata)
source("plot2.R")
plot2()
source("plot2.R")
plot2()
head(hwdata)
plot(hwdata$Time, hwdata$Sub_metering_1, col = "black", type = 'l')
plot(data2plot$Time, data2plot$Sub_metering_1, col = "black", type = 'l')
plot(data2plot$Time, data2plot$Sub_metering_2, col = "red", type = 'l')
source("plot3.R")
plot3()
plot3()
source("plot3.R")
plot3()
dev.off()
?line
line(data2plot$Time, data2plot$Sub_metering_2, type = "l")
line(data2plot$Time, data2plot$Sub_metering_2)
plot(data2plot$Time, data2plot$Sub_metering_2)
line(data2plot$Time, data2plot$Sub_metering_3)
class(data2plot$Sub_metering_3)
line(data2plot$Time, data2plot$Sub_metering_3, type = 'l')
line(data2plot$Time, data2plot$Sub_metering_3, type = '1')
source("plot3.R")
plot3()
png("plot3.png", width = 480, height = 480)
dev.off()
plot3 <- function() {
0
)
source("plot3.R")
plot3()
source("plot3.R")
plot3()
source("plot3.R")
plot3()
data2plot$g
hwdata <- read.table(fileLocation, header = TRUE, na.strings = '?', quote = "", sep = ';', stringsAsFactors = FALSE)
data2plot <- hwdata[hwdata$Date %in% c("1/2/2007", "2/2/2007"), ]
fileLocation <- "../household_power_consumption.txt";
hwdata <- read.table(fileLocation, header = TRUE, na.strings = '?', quote = "", sep = ';', stringsAsFactors = FALSE)
data2plot <- hwdata[hwdata$Date %in% c("1/2/2007", "2/2/2007"), ]
source("plot4.R")
plot4()
